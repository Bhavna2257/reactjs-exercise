{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\tictactoe\\\\game\\\\src\\\\components\\\\gaming.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport CalculateWinner from \"./CalculateWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gaming extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (CalculateWinner(squares) || squares[i]) return;\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = CalculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => this.handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Gaming;","map":{"version":3,"sources":["C:/React/tictactoe/game/src/components/gaming.js"],"names":["React","Board","CalculateWinner","Gaming","Component","constructor","props","state","history","squares","Array","fill","xIsNext","handleClick","i","current","length","slice","setState","concat","render","winner","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AACA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAAX,OAAD,CADE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,UAAMN,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMP,OAAO,GAAGM,OAAO,CAACN,OAAR,CAAgBQ,KAAhB,EAAhB;AACA,QAAIf,eAAe,CAACO,OAAD,CAAf,IAA4BA,OAAO,CAACK,CAAD,CAAvC,EAA4C;AAC5CL,IAAAA,OAAO,CAACK,CAAD,CAAP,GAAa,KAAKP,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKM,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CAAC;AAAEV,QAAAA,OAAO,EAAEA;AAAX,OAAD,CAAf,CADG;AAEZG,MAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAFT,KAAd;AAID;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAMZ,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMO,OAAO,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMK,MAAM,GAAGnB,eAAe,CAACa,OAAO,CAACN,OAAT,CAA9B;AACA,QAAIa,MAAJ;;AACA,QAAID,MAAJ,EAAY;AACVC,MAAAA,MAAM,GAAG,aAAaD,MAAtB;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAG,mBAAmB,KAAKf,KAAL,CAAWK,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AACD,wBACE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEG,OAAO,CAACN,OAAxB;AAAiC,QAAA,OAAO,EAAGK,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,oBAEG;AAAA,kBAAMQ;AAAN;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApCkC;;AAuCrC,eAAenB,MAAf","sourcesContent":["import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport CalculateWinner from \"./CalculateWinner\";\r\nclass Gaming extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n\r\n      xIsNext: true,\r\n    };\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (CalculateWinner(squares) || squares[i]) return;\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = CalculateWinner(current.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div>\r\n        <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n        ;<div>{status}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gaming;\r\n"]},"metadata":{},"sourceType":"module"}