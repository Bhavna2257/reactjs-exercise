{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\tictactoe\\\\game\\\\src\\\\components\\\\gaming.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport CalculateWinner from \"./CalculateWinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gaming extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (CalculateWinner(squares) || squares[i]) return;\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = CalculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to start game\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => this.handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Gaming;","map":{"version":3,"sources":["C:/React/tictactoe/game/src/components/gaming.js"],"names":["React","Board","CalculateWinner","Gaming","Component","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","jumpTo","step","setState","handleClick","i","current","length","slice","concat","render","winner","moves","map","move","desc","status"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport CalculateWinner from \"./CalculateWinner\";\r\nclass Gaming extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (CalculateWinner(squares) || squares[i]) return;\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = CalculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to start game\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div>\r\n        <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n        ;<div>{status}</div>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gaming;\r\n"]},"metadata":{},"sourceType":"module"}